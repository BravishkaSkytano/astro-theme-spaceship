---
import type { DocumentContext, NavigationContext } from "../types";
import NavigationBackLinks from "./Navigation/BackLinks.astro";
import NavigationLinks from "./Navigation/Links.astro";
import TableOfContents from "./Navigation/TableOfContents.astro";

import GraphIcon from './Icons/Graph.astro';
import OutlineIcon from './Icons/Outline.astro';
import LinkIcon from './Icons/Link.astro';

export type Props = {
  id?: string;
  document?: DocumentContext;
  navigation: NavigationContext;
  showToC?: boolean;
  showLinks?: boolean;
  showRelations?: boolean;
};

const { id, document, navigation, showToC = true, showLinks = true, showRelations = true } = Astro.props;

const gridTemplates = {
  "[grid-template-areas:'tab1_tab2_tab3''tabcontent_tabcontent_tabcontent'] grid-cols-3": showToC && showLinks && showRelations,
  "[grid-template-areas:'a_tab2_tab3''a_tabcontent_tabcontent'] grid-cols-2": !showToC && showLinks && showRelations,
  "[grid-template-areas:'a_b_tab3''a_b_tabcontent'] grid-cols-1": !showToC && !showLinks && showRelations,
  "[grid-template-areas:'a_b_c''a_b_c']": !showToC && !showLinks && !showRelations,
  "[grid-template-areas:'tab1_b_tab3''tabcontent_b_tabcontent'] grid-cols-2": showToC && !showLinks && showRelations,
  "[grid-template-areas:'tab1_b_c''tabcontent_b_c'] grid-cols-1": showToC && !showLinks && !showRelations,
  "[grid-template-areas:'tab1_tab2''tabcontent_tabcontent'] grid-cols-2": showToC && showLinks && !showRelations,
};

const template = Object.entries(gridTemplates).find(([k, v]) => v === true)?.[0];
---

<section
  id={id}
  class:list={[
    "grid",
    template
  ]}
>
  {showToC && (
    <input
      id={`${id}-tab-one`}
      type="radio"
      name={id}
      class="peer/tab-one opacity-0 absolute [grid-area:tab1]"
      checked
    />
    <label
      for={`${id}-tab-one`}
      class="[grid-area:tab1] bg-tab-background dark:bg-tab-background-dark text-text dark:text-text-dark border-tab-active-border dark:border-tab-active-border-dark border-b hover:border-b-0 hover:border hover:bg-tab-active-background dark:hover:bg-tab-active-background-dark peer-checked/tab-one:border peer-checked/tab-one:border-b-0 peer-checked/tab-one:bg-tab-active-background dark:peer-checked/tab-one:bg-tab-active-background-dark cursor-pointer p-2 rounded-t-lg flex truncate"
      title="Outline"
      >
        <OutlineIcon />
    </label>
  )}

  {showLinks && (
    <input
      id={`${id}-tab-two`}
      type="radio"
      name={id}
      class="peer/tab-two opacity-0 absolute [grid-area:tab2]"
    />
    <label
      for={`${id}-tab-two`}
      class="[grid-area:tab2] bg-tab-background dark:bg-tab-background-dark text-text dark:text-text-dark border-tab-active-border dark:border-tab-active-border-dark border-b hover:border-b-0 hover:border hover:bg-tab-active-background dark:hover:bg-tab-active-background-dark peer-checked/tab-two:border peer-checked/tab-two:border-b-0 peer-checked/tab-two:bg-tab-active-background dark:peer-checked/tab-two:bg-tab-active-background-dark cursor-pointer p-2 rounded-t-lg flex"
      title="Links"
    >
      <LinkIcon />
    </label>
  )}


  {showRelations && (
    <input
      id={`${id}-tab-three`}
      type="radio"
      name={id}
      class="peer/tab-three opacity-0 absolute [grid-area:tab3]"
    />
    <label
      for={`${id}-tab-three`}
      class="[grid-area:tab3] bg-white/0 text-text dark:text-text-dark border-tab-active-border dark:border-tab-active-border-dark border-b hover:border-b-0 hover:border hover:bg-tab-active-background dark:hover:bg-tab-active-background-dark peer-checked/tab-three:border peer-checked/tab-three:border-b-0 peer-checked/tab-three:bg-tab-active-background dark:peer-checked/tab-three:bg-tab-active-background-dark cursor-pointer p-2 rounded-t-lg flex justify-center"
      title="Graph"
    >
      <GraphIcon />
    </label>
  )}

  
  {showToC && (
    <div
      class="hidden peer-checked/tab-one:block p-4 overflow-hidden w-full [grid-area:tabcontent]"
    >
      <TableOfContents document={document} />
    </div>
  )}

  {showLinks && (
    <div
      class="hidden peer-checked/tab-two:flex p-4 overflow-hidden w-full [grid-area:tabcontent]"
    >
      <NavigationLinks document={document} />
      <NavigationBackLinks navigation={navigation} />
    </div>
  )}
  
  {showRelations && (
    <div
      class="hidden peer-checked/tab-three:flex p-4 overflow-hidden w-full [grid-area:tabcontent]"
    >
    </div>
  )}

</section>
